# This file contains common pin mappings for the BIGTREETECH SKR mini
# E3 v3.0. To use this config, the firmware should be compiled for the
# STM32G0B1 with a "8KiB bootloader" and USB communication/USART.

# The "make flash" command does not work on the SKR mini E3. Instead,
# after running "make", copy the generated "out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the SKR
# mini E3 with that SD card.

# See docs/Config_Reference.md for a description of parameters.

# [include adxlmcu.cfg]
[include mainsail.cfg]
[include config_backup.cfg]


[input_shaper]
#shaper_freq_x: 38.28
#shaper_freq_y: 28.28
shaper_type: ei

[bltouch]
sensor_pin: ^PC14
control_pin: PA1
x_offset: -43.814
y_offset: -10.199
# z_offset: 0.00
probe_with_touch_mode: True
stow_on_each_sample: False

[safe_z_home]
home_xy_position: 158.814,125.199 # Change coordinates to the center of your print bed
speed: 120
z_hop: 5                  # Move up 5mm
z_hop_speed: 25


[bed_mesh]
speed: 120
horizontal_move_z: 5
mesh_min: 15,15
mesh_max: 204.186,220.801
probe_count: 5,5
mesh_pps: 2,2
algorithm: bicubic
fade_start: 1
fade_end: 10
fade_target: 0

[screws_tilt_adjust]
screw1: 70.5,37.5
screw1_name: front left screw
screw2: 240,37.5
screw2_name: front right screw
screw3: 240,207.5
screw3_name: rear right screw
screw4: 70.5,207.5
screw4_name: rear left screw
horizontal_move_z: 5
speed: 100
screw_thread: CW-M4

[stepper_x]
step_pin: PB13
dir_pin: !PB12
enable_pin: !PB14
microsteps: 16
rotation_distance: 40
endstop_pin: ^PC0
position_endstop: 0
position_max: 248
homing_speed: 120

[tmc2209 stepper_x]
uart_pin: PC11
tx_pin: PC10
uart_address: 0
run_current: 0.580
hold_current: 0.500
stealthchop_threshold: 999999

[stepper_y]
step_pin: PB10
dir_pin: !PB2
enable_pin: !PB11
microsteps: 16
rotation_distance: 40
endstop_pin: ^PC1
position_endstop: 0
position_max: 231
homing_speed: 120

[tmc2209 stepper_y]
uart_pin: PC11
tx_pin: PC10
uart_address: 2
run_current: 0.580
hold_current: 0.500
stealthchop_threshold: 999999

[stepper_z]
step_pin: PB0
dir_pin: PC5
enable_pin: !PB1
microsteps: 16
rotation_distance: 8
# endstop_pin: ^PC2
# position_endstop: 0.0
endstop_pin: probe:z_virtual_endstop
position_max: 240
position_min: -5

[tmc2209 stepper_z]
uart_pin: PC11
tx_pin: PC10
uart_address: 1
run_current: 0.580
hold_current: 0.500
stealthchop_threshold: 999999

[extruder]
step_pin: PB3
dir_pin: !PB4
enable_pin: !PD1
microsteps: 16
rotation_distance: 32.69414058181681
nozzle_diameter: 0.600
filament_diameter: 1.750
heater_pin: PC8
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA0
#control: pid
# pid_Kp: 21.527
# pid_Ki: 1.063
# pid_Kd: 108.982
min_temp: 0
max_temp: 260
pressure_advance: 0.347

[tmc2209 extruder]
uart_pin: PC11
tx_pin: PC10
uart_address: 3
run_current: 0.650
hold_current: 0.500
stealthchop_threshold: 999999

[heater_bed]
heater_pin: PC9
sensor_type: ATC Semitec 104GT-2
sensor_pin: PC4
control: pid
# pid_Kp: 54.027
# pid_Ki: 0.770
# pid_Kd: 948.182
min_temp: 0
max_temp: 130

#Part cooling fan
[fan]
pin: PC6

#Heatsink cooling fan
[heater_fan Hotend_fan]
pin: PC7

#Motherboard controler fan
[controller_fan Mainboard_Fan]
pin: PB15

[temperature_sensor MCU]
sensor_type: temperature_mcu

[temperature_sensor Pi]
sensor_type: temperature_host

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32g0b1xx_200056001150415833323520-if00
# serial: /dev/ttyAMA0
# restart_method: command

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 4000
max_z_velocity: 5
max_z_accel: 100

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PB5,  EXP1_3=PA9,   EXP1_5=PA10, EXP1_7=PB8, EXP1_9=<GND>,
    EXP1_2=PA15, EXP1_4=<RST>, EXP1_6=PB9,  EXP1_8=PD6, EXP1_10=<5V>


                                    #MACROS#
                                    
[gcode_macro START_PRINT_KOBEE]
gcode:
    M140 S65                        # turn on heatbed
    M104 S150                       # turn on hotend
    M190 S65                        # wait for heatbed
    G28                             # Home all axis
    BED_MESH_CALIBRATE ADAPTIVE=1   # Create a bed mesh of only the print area
    G1 X0 Y20 Z5 F5000.0            # Move above start position
    M109 S210                       # Wait for extruder temperature
    G92 E0                          # Reset Extruder

[gcode_macro START_PRINT_TECOR]
gcode:
    M140 S65                        # turn on heatbed
    M104 S150                       # turn on hotend
    M190 S65                        # wait for heatbed
    G28                             # Home all axis
    BED_MESH_CALIBRATE ADAPTIVE=1   # Create a bed mesh of only the print area
    G1 X0 Y20 Z5 F5000.0            # Move above start position
    M109 S215                       # Wait for extruder temperature
    G92 E0                          # Reset Extruder


[gcode_macro END_PRINT]
gcode:
     
    M140 S0                         # Turn off bed
    M104 S0                         # Turn off extruder
    M106 S0                         # Turn off part cooling fan   
    G91                             # Relative positioning
    G0 Z3 F5000.0                   # Move Z up 3mm relative positioning
    G90                             # Absolute positioning
    G1 E-3 F5000.0                  # Retract 2mm
    G1 X0 Y231 E-2 F5000.0          # Move X to 0, Y to max and retract 3mm absolute positioning
    G91                             # Change to relative positioning
    G1 Z27 E-5                      # Move Z up 27mm relative
    M400                            # Wait for moves to finish
    M84                             # Disable steppers

[gcode_macro PAUSE_PRINT]
gcode:
    M25

[gcode_macro BED_TRAMMING]
gcode:
    SCREWS_TILT_CALCULATE           # Goes to each corner to see the height

[gcode_macro HOTEND_PID]
gcode:
    PID_CALIBRATE HEATER=extruder TARGET=210

[gcode_macro BED_PID]
gcode:
    PID_CALIBRATE HEATER=heater_bed TARGET=65

[gcode_macro M500]
gcode:
    SAVE_CONFIG

[gcode_macro CALIBRATE_X_AXIS]
gcode:
    SHAPER_CALIBRATE AXIS=X

[gcode_macro CALIBRATE_Y_AXIS]
gcode:
    SHAPER_CALIBRATE AXIS=Y

[exclude_object]

[gcode_arcs]

[pause_resume]
recover_velocity: 50.0

[gcode_macro M600]
gcode:
   {% set X = 50 %}
   {% set Y = 0 %}
   {% set Z = 10 %}
   SAVE_GCODE_STATE NAME=M600_state
   PAUSE
   G91
   G1 E-.8 F2700
   G1 Z{Z}
   G90
   G1 X{X} Y{Y} F3000
   G91
   G1 E-50 F1000
   RESTORE_GCODE_STATE NAME=M600_state

[gcode_macro TEST_SPEED]
# Home, get position, throw around toolhead, home again.
# If MCU stepper positions (first line in GET_POSITION) are greater than a full step different (your number of microsteps), then skipping occured.
# We only measure to a full step to accomodate for endstop variance.
# Example: TEST_SPEED SPEED=300 ACCEL=5000 ITERATIONS=10

description: Test for max speed and acceleration parameters for the printer. Procedure: Home -> ReadPositionFromMCU -> MovesToolhead@Vel&Accel -> Home -> ReadPositionfromMCU

gcode:
    # Speed
    {% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
    # Iterations
    {% set iterations = params.ITERATIONS|default(5)|int %}
    # Acceleration
    {% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
    # Minimum Cruise Ratio
    {% set min_cruise_ratio = params.MIN_CRUISE_RATIO|default(0.5)|float %}
    # Bounding inset for large pattern (helps prevent slamming the toolhead into the sides after small skips, and helps to account for machines with imperfectly set dimensions)
    {% set bound = params.BOUND|default(20)|int %}
    # Size for small pattern box
    {% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
    
    # Large pattern
        # Max positions, inset by BOUND
        {% set x_min = printer.toolhead.axis_minimum.x + bound %}
        {% set x_max = printer.toolhead.axis_maximum.x - bound %}
        {% set y_min = printer.toolhead.axis_minimum.y + bound %}
        {% set y_max = printer.toolhead.axis_maximum.y - bound %}
    
    # Small pattern at center
        # Find X/Y center point
        {% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
        {% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
        
        # Set small pattern box around center point
        {% set x_center_min = x_center - (smallpatternsize/2) %}
        {% set x_center_max = x_center + (smallpatternsize/2) %}
        {% set y_center_min = y_center - (smallpatternsize/2) %}
        {% set y_center_max = y_center + (smallpatternsize/2) %}

    # Save current gcode state (absolute/relative, etc)
    SAVE_GCODE_STATE NAME=TEST_SPEED
    
    # Output parameters to g-code terminal
    { action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
    
    # Home and get position for comparison later:
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28
        # QGL if not already QGLd (only if QGL section exists in config)
        {% if printer.configfile.settings.quad_gantry_level %}
            {% if printer.quad_gantry_level.applied == False %}
                QUAD_GANTRY_LEVEL
                G28 Z
            {% endif %}
        {% endif %} 
        # Move 50mm away from max position and home again (to help with hall effect endstop accuracy - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/24)
        G90
        G1 X{printer.toolhead.axis_maximum.x-50} Y{printer.toolhead.axis_maximum.y-50} F{30*60}
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28 X Y
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Go to starting position
    G0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}

    # Set new limits
    {% if printer.configfile.settings.printer.minimum_cruise_ratio is defined %}
        SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} MINIMUM_CRUISE_RATIO={min_cruise_ratio}
    {% else %}
        SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}
    {% endif %}

    {% for i in range(iterations) %}
        # Large pattern diagonals
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_max} Y{y_max} F{speed*60}
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
        G0 X{x_min} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
        
        # Large pattern box
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_min} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
    
        # Small pattern diagonals
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_max} Y{y_center_max} F{speed*60}
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
        G0 X{x_center_min} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
        
        # Small pattern box
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_min} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
    {% endfor %}

    # Restore max speed/accel/accel_to_decel to their configured values
    {% if printer.configfile.settings.printer.minimum_cruise_ratio is defined %}
        SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} MINIMUM_CRUISE_RATIO={printer.configfile.settings.printer.minimum_cruise_ratio} 
    {% else %}
        SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel}
    {% endif %}

    # Re-home and get position again for comparison:
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28 # This is a full G28 to fix an issue with CoreXZ - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/12
        # Go to XY home positions (in case your homing override leaves it elsewhere)
        G90
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Restore previous gcode state (absolute/relative, etc)
    RESTORE_GCODE_STATE NAME=TEST_SPEED

                                    #END OF MACROS#

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bltouch]
#*# z_offset = 0.710
#*#
#*# [extruder]
#*# pid_kp = 28.047
#*# pid_ki = 1.612
#*# pid_kd = 122.004
#*# control = pid
#*#
#*# [heater_bed]
#*# pid_kp = 75.197
#*# pid_ki = 1.607
#*# pid_kd = 879.802
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	0.060000, 0.080000, 0.030000, 0.032500, 0.185000
#*# 	0.095000, 0.062500, 0.025000, 0.030000, 0.140000
#*# 	0.120000, 0.050000, 0.007500, 0.000000, 0.080000
#*# 	0.087500, 0.020000, -0.015000, -0.007500, 0.125000
#*# 	0.072500, 0.012500, 0.040000, 0.065000, 0.175000
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 15.0
#*# max_x = 204.16
#*# min_y = 15.0
#*# max_y = 220.8
#*#
#*# [input_shaper]
#*# shaper_type_y = mzv
#*# shaper_freq_y = 42.6
#*# shaper_type_x = mzv
#*# shaper_freq_x = 67.0
